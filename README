flabberghast, noam.susman
209131481, 318528304

We chose to implement the trees package using three classes: Flora, Tree, Fruit. The Flora class only needs
a seed (for consistent generation), an ImageReader instance (because we used custom fruit images), and a
callback to the Terrain method for determining the height of the ground at a specific point (so that trees
won't be partially underground or hover in the air).
Then, Flora.create(minX, maxX) randomly (but consistently) creates trees in the range [minX, maxX], which are
 all instances of Tree. For each generated Tree, Flora then randomly creates leaf Blocks and Fruits around it
 in a rectangle of random (bounded) size. Finally, Flora packs all this flora in a HashMap, where each tree 
is a key, and its value is an ArrayList of all of its leaves and fruit. This HashMap is then returned,
allowing easy iteration over all trees (the key set) and the objects for each tree.
Note: we chose to ADD to the API of Sun and SunHalo for design reasons - we wanted the ability to create
more orbiting objects (as you can see in the game), with different angles and colors; We ALSO implemented the
specified API. Additionally, we chose to have the avatar appear BEHIND the leaves and not in front of them,
for aesthetic reasons. We ask you to not take off points for these additions, which we think made the game
more fun. Thank you!